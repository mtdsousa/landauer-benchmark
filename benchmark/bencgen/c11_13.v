module CRippleCarryAdder_13_13_13_InOutT(pA12,pA11,pA10,pA9,pA8,pA7,pA6,pA5,pA4,pA3,pA2,pA1,pA0, pB12,pB11,pB10,pB9,pB8,pB7,pB6,pB5,pB4,pB3,pB2,pB1,pB0, r12,r11,r10,r9,r8,r7,r6,r5,r4,r3,r2,r1,r0, cIn, cOut);

input pA12,pA11,pA10,pA9,pA8,pA7,pA6,pA5,pA4,pA3,pA2,pA1,pA0, pB12,pB11,pB10,pB9,pB8,pB7,pB6,pB5,pB4,pB3,pB2,pB1,pB0, cIn;
output r12,r11,r10,r9,r8,r7,r6,r5,r4,r3,r2,r1,r0, cOut;
wire w1, w2, w3, w4, w5, w6, w7, w8, w9, w10, w11, w12, w13, w14, w15, w16, w17, w18, w19, w20, w21, w22, w23, w24, w25, w26, w27, w28, w29, w30, w31, w32, w33, w34, w35, w36, w37, w38, w39, w40, w41, w42, w43, w44, w45, w46, w47, w48, w49, w50, w51, w52, w53, w54, w55, w56, w57, w58, w59, w60, w61, w62, w63, w64, w65, w66, w67, w68, w69, w70, w71, w72, w73, w74, w75, w76, w77, w78, w79, w80, w81, w82, w83, w84, w85, w86, w87, w88, w89, w90, w91, w92, w93;

assign w1 = pA12;
assign w2 = pA11;
assign w3 = pA10;
assign w4 = pA9;
assign w5 = pA8;
assign w6 = pA7;
assign w7 = pA6;
assign w8 = pA5;
assign w9 = pA4;
assign w10 = pA3;
assign w11 = pA2;
assign w12 = pA1;
assign w13 = pA0;
assign w14 = pB12;
assign w15 = pB11;
assign w16 = pB10;
assign w17 = pB9;
assign w18 = pB8;
assign w19 = pB7;
assign w20 = pB6;
assign w21 = pB5;
assign w22 = pB4;
assign w23 = pB3;
assign w24 = pB2;
assign w25 = pB1;
assign w26 = pB0;
assign r12 = w27;
assign r11 = w28;
assign r10 = w29;
assign r9 = w30;
assign r8 = w31;
assign r7 = w32;
assign r6 = w33;
assign r5 = w34;
assign r4 = w35;
assign r3 = w36;
assign r2 = w37;
assign r1 = w38;
assign r0 = w39;
assign w41 = cIn;
assign cOut = w40;

assign w44 = w1 ^ w14;
assign w27 = w44 ^ w41;
assign w45 = w41 & w44;
assign w46 = w14 & w1;
assign w43 = w45 | w46;
assign w48 = w2 ^ w15;
assign w28 = w48 ^ w43;
assign w49 = w43 & w48;
assign w50 = w15 & w2;
assign w47 = w49 | w50;
assign w52 = w3 ^ w16;
assign w29 = w52 ^ w47;
assign w53 = w47 & w52;
assign w54 = w16 & w3;
assign w51 = w53 | w54;
assign w56 = w4 ^ w17;
assign w30 = w56 ^ w51;
assign w57 = w51 & w56;
assign w58 = w17 & w4;
assign w55 = w57 | w58;
assign w60 = w5 ^ w18;
assign w31 = w60 ^ w55;
assign w61 = w55 & w60;
assign w62 = w18 & w5;
assign w59 = w61 | w62;
assign w64 = w6 ^ w19;
assign w32 = w64 ^ w59;
assign w65 = w59 & w64;
assign w66 = w19 & w6;
assign w63 = w65 | w66;
assign w68 = w7 ^ w20;
assign w33 = w68 ^ w63;
assign w69 = w63 & w68;
assign w70 = w20 & w7;
assign w67 = w69 | w70;
assign w72 = w8 ^ w21;
assign w34 = w72 ^ w67;
assign w73 = w67 & w72;
assign w74 = w21 & w8;
assign w71 = w73 | w74;
assign w76 = w9 ^ w22;
assign w35 = w76 ^ w71;
assign w77 = w71 & w76;
assign w78 = w22 & w9;
assign w75 = w77 | w78;
assign w80 = w10 ^ w23;
assign w36 = w80 ^ w75;
assign w81 = w75 & w80;
assign w82 = w23 & w10;
assign w79 = w81 | w82;
assign w84 = w11 ^ w24;
assign w37 = w84 ^ w79;
assign w85 = w79 & w84;
assign w86 = w24 & w11;
assign w83 = w85 | w86;
assign w88 = w12 ^ w25;
assign w38 = w88 ^ w83;
assign w89 = w83 & w88;
assign w90 = w25 & w12;
assign w87 = w89 | w90;
assign w91 = w13 ^ w26;
assign w39 = w91 ^ w87;
assign w92 = w87 & w91;
assign w93 = w26 & w13;
assign w40 = w92 | w93;

endmodule

